@import "./variables";
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&family=Raleway:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Saira:ital,wght@0,100..900;1,100..900&display=swap');

@mixin boxmodel($weight) {
    margin: 0;
    padding: 0;
    font-family: "Saira", sans-serif;
    font-weight: $weight;
    font-style: normal;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

@mixin border {
    border: 1px solid;
}






@mixin First-section($firstbg) {
    display: flex;
    padding-block: 100px;
    padding-inline: 100px;
    gap: 6rem;
    background: $firstbg ; //
    justify-content: space-between;
    justify-content: space-around;

    .img-div {
        background: url(../img/ropes-2.webp);
        border-radius: 2rem;
        background-position: center;
        background-size: 600px;
        padding: 200px;
        background-repeat: no-repeat;
    }

    .text-div {
        color: white;
        max-width: 600px;
        display: flex;
        flex-direction: column;
        gap: 2rem;

        h1 {
            margin-top: 20px;
            font-size: 1cm;
        }

        p {
            line-height: 30px;
        }

        a.btn {
            max-width: 160px;
            padding-inline: 20px;
            text-decoration: none;
            font-size: 14px;
        }


    }
}

@mixin sub-header($color, $bg) {
    display: flex;
    align-items: center;
    padding: 7rem;
    gap: 1rem;
    background: $bg;



    .text {
        width: 100%;

        h1 {
            width: 100%;
            font-size: 2.5rem;
            text-align: center;
            color: $color;


        }

        p {
            font-size: 1.2rem;
            max-width: 100%;
            text-align: center;
            color: $color;

        }

    }

}

@mixin Button {
    padding: 13px;
    background: $logo-color;
    color: white;
    padding-inline: 22px;
    text-decoration: none;
    border-radius: 10px;
    outline: none;
    border: none;
    font-size: 1rem;
    transition: .5s all;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    border: 2px solid transparent;


    // background-origin: none;

    &:hover {
        background: transparent;
        border: 2px solid #ca0123;

    }

    // .btnspan {
    //     background-color: #ca0123;
    // }
}

//
@mixin respond-to($breakpoint) {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);

    // If the key exists in the map
    @if $value !=null {

        // Prints a media query based on the value
        @media (min-width: $value) {
            @content;
        }
    }

    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        +"Please make sure it is defined in `$breakpoints` map.";
    }
}